apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

// ... react {} block remains unchanged ...

android {
    compileSdk rootProject.ext.compileSdkVersion
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    namespace 'com.hussainhamim.amazonmobile'
    defaultConfig {
        applicationId 'com.hussainhamim.amazonmobile'
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug { signingConfig signingConfigs.debug }
        release {
            signingConfig signingConfigs.debug
            shrinkResources findProperty('android.enableShrinkResourcesInReleaseBuilds')?.toBoolean() ?: false
            minifyEnabled findProperty('android.enableProguardInReleaseBuilds')?.toBoolean() ?: false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            crunchPngs findProperty('android.enablePngCrunchInReleaseBuilds')?.toBoolean() ?: true
        }
    }

    packagingOptions {
        jniLibs { useLegacyPackaging findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false }
    }
    androidResources { ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~' }
}

// Resolve missing AARs by substituting broken library with working fork
configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute module("com.github.jiangdongguo.AndroidUSBCamera:libausbc")
            using module("com.github.chenyeju295.AndroidUSBCamera:libausbc:3.3.6")
    }
}

dependencies {
    implementation "com.facebook.react:react-android"

    def isGifEnabled = (findProperty('expo.gif.enabled') ?: "") == "true"
    def isWebpEnabled = (findProperty('expo.webp.enabled') ?: "") == "true"
    def isWebpAnimatedEnabled = (findProperty('expo.webp.animated') ?: "") == "true"

    if (isGifEnabled) {
        implementation "com.facebook.fresco:animated-gif:${expoLibs.versions.fresco.get()}"
    }
    if (isWebpEnabled) {
        implementation "com.facebook.fresco:webpsupport:${expoLibs.versions.fresco.get()}"
        if (isWebpAnimatedEnabled) {
            implementation "com.facebook.fresco:animated-webp:${expoLibs.versions.fresco.get()}"
        }
    }

    if (hermesEnabled.toBoolean()) {
        implementation "com.facebook.react:hermes-android"
    } else {
        implementation jscFlavor
    }

    // Use working fork of AndroidUSBCamera to resolve missing artifacts
    implementation "com.github.chenyeju295.AndroidUSBCamera:libausbc:3.3.6"
}
